version: '3.8'

services:
  # Frontend (Angular)
  frontend:
    image: akhil3797/mean-frontend:latest
    container_name: mean_frontend
    restart: unless-stopped
    networks:
      - mean_network
    depends_on:
      - backend

  # Backend (Node.js/Express)
  backend:
    image: akhil3797/mean-backend:latest
    container_name: mean_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://admin:password123@mongo:27017/testdb?authSource=admin
    networks:
      - mean_network
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongo:
    image: mongo:6
    container_name: mean_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: testdb
    volumes:
      - mongo_data:/data/db
    networks:
      - mean_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mean_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/reverse-proxy.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mean_network
    depends_on:
      - frontend
      - backend

volumes:
  mongo_data:

networks:
  mean_network:
    driver: bridge